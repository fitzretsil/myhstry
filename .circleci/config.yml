# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
      
      - image: circleci/mysql:latest
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/myhstry

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
    
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
        
      # run tests!
      - run: mvn integration-test -Dspring.profiles.active=test
      
      # Prepare for Docker commands
      - setup_remote_docker
      
      # Login to Docker
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      
      # Build then Push the image to the Docker Respository
      - run: ./mvnw install dockerfile:build -Dspring.profiles.active=test
      - run: ./mvnw install dockerfile:push -Dspring.profiles.active=test

  deploy:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/myhstry  
    steps:
      - run:
          name: Deploy if tests pass and branch is Master
          command: ssh -o "StrictHostKeyChecking no" $USERNAME@$SERVER docker pull andydiack/myhstry
          
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master